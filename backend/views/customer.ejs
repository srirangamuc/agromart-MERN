<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Dashboard</title>
    <style>
        /* Basic styling for the page */
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }

        h1, h2 {
            color: #2e7d32;
        }

        /* Navigation bar styling */
        .nav {
            margin-bottom: 20px;
        }

        .nav button {
            background-color: #2e7d32;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            margin-right: 10px;
        }

        .nav button:hover {
            background-color: #1b5e20;
        }

        /* Sections */
        .section {
            display: none; /* Hide all sections by default */
        }

        .section.active {
            display: block; /* Show the active section */
        }

        /* Grid layout for products */
        .products-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .product-item {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            width: calc(25% - 20px); /* 4 items per row */
            text-align: center;
        }

        img {
            width: 100px;
            height: 100px;
        }

        /* Styling for the cart table */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: white;
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .total-price {
            font-size: 1.2em;
            font-weight: bold;
            color: #2e7d32;
            margin-top: 10px;
        }

        .button {
            background-color: #2e7d32; /* Main color */
            color: white; /* Text color */
            padding: 10px 15px; /* Padding */
            border: none; /* Remove border */
            border-radius: 5px; /* Rounded corners */
            cursor: pointer; /* Pointer on hover */
            text-decoration: none; /* Remove underline */
            margin-right: 10px; /* Space between buttons */
            display: inline-block; /* Display as inline block */
            transition: background-color 0.3s; /* Smooth background color transition */
        }
        
        .button:hover {
            background-color: #1b5e20; /* Darker shade on hover */
        }

        .delete-button {
            background-color: red;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .delete-button:hover {
            background-color: darkred;
        }

        .profile-button, .subscription-button {
            background-color: #2e7d32;
            color: white;
            padding: 10px 20px;
            margin-top: 20px;
            text-decoration: none;
            border-radius: 5px;
            display: inline-block;
        }

        .profile-button:hover, .subscription-button:hover {
            background-color: #1b5e20;
        }

        /* Update profile form styling */
        .update-profile-form {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .update-profile-form label {
            display: block;
            margin: 10px 0 5px;
        }

        .update-profile-form input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .error-message {
            color: red;
            background-color: #fdd;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Welcome, <%= user.name %>!</h1>
    <% if (user.subscription === 'pro') { %>
        <h2>You are a Pro User!</h2>
    <% } else if (user.subscription === 'pro plus') { %>
        <h2>You are a Pro Plus User!</h2>
    <% } %>
    <div id="error-message" style="color: red;"></div>


    <div class="nav">
        <button onclick="showSection('products')">Available Products</button>
        <button onclick="showSection('cart-checkout')">Your Cart & Checkout</button>
        <button onclick="showSection('subscription')">Subscription Options</button>
        <button onclick="showSection('update-profile')">Update Profile</button>
        <button onclick="showSection('get-purchases')">Get Previous Purchases</button>
        <form action="/customer/logout" method="POST" style="display:inline;">
            <button type="submit" class="profile-button">Logout</button>
        </form>
    </div>

    <div id="products" class="section active">
        <h1>Available Products</h1>
        <div class="products-grid">
            <% items.forEach(item => { %>
                <div class="product-item">
                    <img src="/images/resized_images/<%= item.name %>.png" alt="<%= item.name %>">
                    <h3><%= item.name %></h3>
                    <p>Price: ₹<%= item.averagePrice * 1.5 %></p>
                    <form action="/customer/add-to-cart" method="POST">
                        <input type="hidden" name="itemId" value="<%= item._id %>">
                        <input type="number" name="quantity" min="1" value="1" required>
                        <button type="submit">Add to Cart</button>
                    </form>
                </div>
            <% }); %>
        </div>
    </div>

    <div id="cart-checkout" class="section">
        <h1>Your Cart</h1>
        <div class="cart-section">
            <table>
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (user.cart.length > 0) { %>
                        <% user.cart.forEach(cartItem => { %>
                            <tr>
                                <% if (cartItem.item) { %>
                                    <td><%= cartItem.item.name %></td>
                                    <td><%= cartItem.quantity %></td>
                                    <td>₹<%= (cartItem.item.pricePerKg * cartItem.quantity * 1.5).toFixed(2) %></td>
                                    <td>
                                        <form action="/customer/delete-from-cart" method="POST" style="display:inline;">
                                            <input type="hidden" name="itemId" value="<%= cartItem.item._id %>">
                                            <button type="submit" class="delete-button">Delete</button>
                                        </form>
                                    </td>
                                <% } else { %>
                                    <td colspan="4">Item not found.</td>
                                <% } %>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="4">Your cart is empty.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
            <div class="total-price">
                Total Price: ₹<span id="total-price"><%= user.cart.reduce((total, cartItem) => total + (cartItem.item.pricePerKg * cartItem.quantity * 1.5), 0).toFixed(2) %></span>
            </div>
        </div>

        <h2>Checkout</h2>
        <form action="/customer/checkout" method="POST">
            <label>
                <input type="radio" name="paymentMethod" value="COD" checked> Cash on Delivery
            </label>
            <label>
                <input type="radio" name="paymentMethod" value="stripe"> Stripe
            </label>
            <button type="submit">Checkout</button>
        </form>
    </div>

    <div id="subscription" class="section">
        <% if (user.subscription !== 'pro plus') { %>
        <h2>Unlock Pro Features</h2>
        <p>Get your orders delivered faster with our subscription plans!</p>

        <% if (user.subscription === 'normal') { %>
            <div class="subscription-plan">
                <h3>Pro Plan - ₹599/year</h3>
                <form action="/customer/subscribe" method="POST">
                    <input type="hidden" name="plan" value="pro">
                    <button class="subscription-button" type="submit">Subscribe to Pro</button>
                </form>
            </div>
        <% } %>

        <div class="subscription-plan">
            <h3>Pro Plus Plan - ₹899/year</h3>
            <form action="/customer/subscribe" method="POST">
                <input type="hidden" name="plan" value="pro plus">
                <button class="subscription-button" type="submit">Subscribe to Pro Plus</button>
            </form>
        </div>
        <% } else { %>
            <h2>You are already a Pro Plus user!</h2>
        <% } %>
    </div>

    <div id="update-profile" class="section">
        <h2>Update Your Profile</h2>
        <form action="/customer/update-profile" method="POST" class="update-profile-form">
            <label for="name">Name:</label>
            <input type="text" name="name" id="name" value="<%= user.name %>" required>
    
            <label for="email">Email:</label>
            <input type="email" name="email" id="email" value="<%= user.email %>" required>
    
            <label for="password">Password:</label>
            <input type="password" name="password" id="password" placeholder="Leave blank if not changing">
    
            <h3>Address</h3>
            <label for="hno">House No:</label>
            <input type="text" name="hno" id="hno" value="<%= user.address.hno || '' %>" required>
    
            <label for="street">Street:</label>
            <input type="text" name="street" id="street" value="<%= user.address.street || '' %>" required>
    
            <label for="city">City:</label>
            <input type="text" name="city" id="city" value="<%= user.address.city || '' %>" required>
    
            <label for="state">State:</label>
            <input type="text" name="state" id="state" value="<%= user.address.state || '' %>" required>
    
            <label for="country">Country:</label>
            <input type="text" name="country" id="country" value="<%= user.address.country || '' %>" required>
    
            <label for="zipCode">Zip Code:</label>
            <input type="text" name="zipCode" id="zipCode" value="<%= user.address.zipCode || '' %>" required>
    
            <button type="submit">Update Profile</button>
        </form>
    </div>
    <div id="get-purchases" class="section">
        <h1>Your Purchases</h1>
        <table id="purchasesTable" style="width: 100%; border-collapse: collapse;">
            <thead>
                <tr>
                    <th>Purchase Date</th>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="purchasesBody">
                <!-- Purchases will be populated here -->
            </tbody>
        </table>
        <a href="/customer">Back to Dashboard</a>
    </div>
    

    <script>
        // Function to show/hide sections based on the clicked button
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.section');
            sections.forEach(section => {
                section.classList.remove('active'); // Hide all sections
            });
            document.getElementById(sectionId).classList.add('active'); // Show the clicked section
        }
        function getQueryParams(param) {
            let params = new URLSearchParams(window.location.search);
            return params.get(param);
        }
        // Get the 'error' query from the URL
        const error = getQueryParams('error');
        // If an error is present, display it in a message div
        if (error) {
            document.getElementById('error-message').innerText = decodeURIComponent(error);
        }



        function fetchPurchases() {
            fetch('/customer/purchases')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const purchasesBody = document.getElementById('purchasesBody');
                    purchasesBody.innerHTML = ''; // Clear existing rows
    
                    // Populate the table with purchases data
                    data.forEach(purchase => {
                        const row = document.createElement('tr');
                        const purchaseDate = new Date(purchase.purchaseDate).toDateString();
    
                        // Add purchase items
                        purchase.items.forEach(item => {
                            const itemRow = document.createElement('tr');
                            itemRow.innerHTML = `
                                <td>${purchaseDate}</td>
                                <td>${item.name}</td>
                                <td>${item.quantity}</td>
                                <td>₹${purchase.totalAmount}</td>
                                <td>${purchase.status}</td>
                            `;
                            purchasesBody.appendChild(itemRow);
                        });
                    });
                })
                .catch(error => console.error('Error fetching purchases:', error));
        }
    
        // Show purchases section and fetch data
        document.querySelector('.nav button:nth-child(5)').addEventListener('click', function() {
            showSection('get-purchases'); // Show the purchases section
            fetchPurchases(); // Fetch the purchases data
        });
    </script>
</body>
</html>
